---
import LinkInline from "./LinkInline.astro";

import VisualStudioIcon from "./icons/VisualStudio.astro";
import HtmlIcon from "./icons/Html.astro";
import CssIcon from "./icons/Css.astro";
import DotNetIcon from "./icons/DotNet.astro";
import BootstrapIcon from "./icons/Bootstrap.astro";
import SqlServerIcon from "./icons/SqlServer.astro";

const ICONS: Record<string, any> = {
  visualStudio: VisualStudioIcon,
  html: HtmlIcon,
  css: CssIcon,
  dotnet: DotNetIcon,
  bootstrap: BootstrapIcon,
  sqlServer: SqlServerIcon,
};

interface Props {
  title: string;
  company: string;
  description: string;
  link?: string;
  date: string;
  technologies: string[];
  responsibilities: string[];
}

const {
  title,
  company,
  description,
  link,
  date,
  technologies,
  responsibilities,
} = Astro.props;
---

<div
  class="relative mx-12 pb-12 grid before:absolute before:left-[-35px] before:block before:h-full before:border-l-2 before:border-black/20 dark:before:border-white/15 before:content-[''] md:grid-cols-5 md:gap-10 md:space-x-4]"
>
  <div class="relative pb-12 md:col-span-2">
    <div class="sticky top-0">
      <span
        class="dark:text-yellow-400200 text-yellow-500 -left-[42px] absolute rounded-full text-5xl"
        >&bull;</span
      >

      <h3 class="text-xl font-bold dark:text-yellow-400 text-yellow-500">
        {title}
      </h3>
      <h4 class="font-semibold text-xl text-gray-600 dark:text-white">
        {company}
      </h4>
      <time class="p-0 m-0 text-sm text-gray-600/80 dark:text-white/80">
        {date}
      </time>
    </div>
  </div>
  <div
    class="relative flex flex-col gap-2 pb-4 text-gray-600 dark:text-gray-300 md:col-span-3"
  >
    {description}
    <ul class="list-disc list-inside text-gray-500 dark:text-gray-400 mt-2">
      {responsibilities.map((task) => <li>{task}</li>)}
    </ul>

    <div class="flex gap-2 mt-4">
      {
        technologies.map((tech) => {
          const IconComponent = ICONS[tech];
          return IconComponent ? <IconComponent class="size-10" /> : null;
        })
      }
    </div>
    {
      link && (
        <LinkInline href={link}>
          Sobre la empresa{" "}
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="w-5 icon icon-tabler icon-tabler-chevron-right"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            stroke-width="2"
            stroke="currentColor"
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <>
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M9 6l6 6l-6 6" />
            </>
          </svg>
        </LinkInline>
      )
    }
  </div>
</div>
