---
import GitHubIcon from "./icons/GitHub.astro";
import LinkIcon from "./icons/Link.astro";
import LinkButton from "./LinkButton.astro";
import HtmlIcon from "./icons/Html.astro";
import CssIcon from "./icons/Css.astro";
import AstroIcon from "./icons/AstroI.astro";
import JavaScriptIcon from "./icons/JavaScript.astro";

const TAGS = {
  HTML: {
    name: "HTML",
    class: "border-[#e34f26]",
    icon: HtmlIcon,
  },
  CSS: {
    name: "CSS",
    class: "border-[#264de4]",
    icon: CssIcon,
  },
  ASTRO: {
    name: "Astro",
    class: "border-[#ff5d01]",
    icon: AstroIcon,
  },
  JAVASCRIPT: {
    name: "JavaScript",
    class: "border-[#f7df1e]",
    icon: JavaScriptIcon,
  },
};

const PROJECTS = [
  {
    title: "Porfolio",
    description:
      "Desarrollo de un portafolio personal para presentar proyectos, habilidades y experiencia profesional como ingeniero de software. Basado en el porfolio de midudev.",
    github: "https://github.com/samaelMTA/porfolio",
    image: "/projects/Porfolio.webp",
    tags: [TAGS.HTML, TAGS.CSS, TAGS.JAVASCRIPT, TAGS.ASTRO],
  },
  {
    title: "FISI Silabos",
    description:
      "Aplicación web diseñada para visualizar de manera organizada los sílabos de los cursos del cuarto ciclo de Ingeniería de Software en la UNMSM. Desarrollada como parte del curso de Procesos de Software.",
    link: "https://samaelmta.github.io/procesos-grupo5/",
    github: "https://github.com/samaelMTA/procesos-grupo5",
    image: "/projects/FISISilabos.webp",
    tags: [TAGS.HTML, TAGS.CSS],
  },
];
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
        <div class="w-full md:w-1/2">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 shadow-xl overflow-clip rounded-xl sm:rounded-xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50 group">
            <img
              alt="Project image"
              class="object-cover object-top w-full h-56 transition duration-500 sm:h-full scale-100 group-hover:scale-105"
              loading="lazy"
              src={image}
            />
          </div>
        </div>

        <div class="w-full md:w-1/2 md:max-w-md lg:max-w-sm">
          <h3 class="text-2xl font-bold text-yellow-400">{title}</h3>
          <div class="flex flex-wrap mt-2">
            {tags.length > 4 ? (
              // Display in multiple rows if more than 4 tags
              <div class="flex flex-col gap-2">
                {Array.from({ length: Math.ceil(tags.length / 4) }).map(
                  (_, rowIndex) => (
                    <ul class="flex flex-row gap-x-2">
                      {tags
                        .slice(rowIndex * 4, (rowIndex + 1) * 4)
                        .map((tag) => (
                          <li>
                            <span
                              class={`flex gap-x-2 rounded-full text-xs py-1 px-2 ${tag.class}
                          bg-white text-black border-2 
                          dark:bg-black dark:text-white`}
                            >
                              <tag.icon class="size-4" />
                              {tag.name}
                            </span>
                          </li>
                        ))}
                    </ul>
                  )
                )}
              </div>
            ) : (
              // Display in single row if 4 or fewer tags
              <ul class="flex flex-row gap-x-2">
                {tags.map((tag) => (
                  <li>
                    <span
                      class={`flex gap-x-2 rounded-full text-xs py-1 px-2 ${tag.class}
                      bg-white text-black border-2 
                      dark:bg-black dark:text-white`}
                    >
                      <tag.icon class="size-4" />
                      {tag.name}
                    </span>
                  </li>
                ))}
              </ul>
            )}

            <div class="mt-2 text-gray-700 dark:text-gray-400">
              {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {github && (
                <LinkButton href={github}>
                  <GitHubIcon class="size-6" />
                  Code
                </LinkButton>
              )}
              {link && (
                <LinkButton href={link}>
                  <LinkIcon class="size-4" />
                  Preview
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>
